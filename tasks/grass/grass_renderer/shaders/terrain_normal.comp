#version 430

layout(local_size_x = 32, local_size_y = 32) in;

layout(binding = 0, r32f) restrict readonly uniform image2D height_map;
layout(binding = 1, rgba8) restrict writeonly uniform image2D normal;

const float zScale = 200.0;
const float pixelSize = 30./1.;

vec3 calcNorm(ivec2 texCoord)
{
  float left = imageLoad(height_map, texCoord + ivec2(1, 0)).x * zScale;
  float right = imageLoad(height_map, texCoord + ivec2(-1, 0)).x * zScale;
  float up = imageLoad(height_map, texCoord + ivec2(0, 1)).x * zScale;
  float down = imageLoad(height_map, texCoord + ivec2(0, -1)).x * zScale;

  return normalize(vec3(right - left, 2.0 * pixelSize, up - down));
}

void main()
{
  ivec2 idxy = ivec2(gl_GlobalInvocationID.xy);
  idxy = clamp(idxy, ivec2(1, 1), ivec2(4094, 4094));
  vec3 res = calcNorm(idxy);
  imageStore(normal, idxy, vec4(res*0.5+0.5, 1));
}
